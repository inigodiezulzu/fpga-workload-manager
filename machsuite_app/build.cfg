#
# General settings
#
#   Name            - name of your application
#   TargetBoard     - board to run your application on
#                       [1] pynq,c
#                       [2] mmp,c
#                       [3] zcu102,1
#			            [4] au250,1
#   TargetPart      - part to run you application on
#                       [1] xc7z020clg400-1
#                       [2] xc7z100ffg900-2
#                       [3] xczu9eg-ffvb1156-2-i
#			            [4] xcu250-figd2104-2L-e
#   ReferenceDesign - reference design template
#                       basic
#   TargetOS        - operating system to use
#                       linux
#   TargetXil       - xilinx tools to use
#                       vivado,2024.2
#   CFlags          - additional flags for compilation
#   LdFlags         - additional flags for linking
#   LdLibs          - additional libraries for linking
#

[General]
Name = benchmarks
TargetBoard = au250,1
TargetPart = xcu250-figd2104-2L-e
ReferenceDesign = monitor
TargetOS = linux
TargetXil = vivado,2024.2
CFlags = -O3

#
# ARTICo3 hardware accelerator settings
#
#   HwSource - type of source code that should be used to generate
#              the ARTICo3 accelerators
#                vhdl
#                verilog
#                hls
#
#   MemBytes - local memory storage size in Bytes (might be slightly
#              increased to deal with bank partitioning, so that each
#              memory bank contains an integer number of 32-bit words)
#                1 - 65536 (TODO: increase the limit by adapting ARTICo3 address bus)
#              NOTE: this value is ORIENTATIVE, since the toolchain modifies it
#                    to get the closest (ceiling) value that renders a
#                    partitioning in which all banks (see next parameter)
#                    have an integer amount of 32-bit words (ARTICo3 data
#                    bus width). Therefore, and since there is a 64kB
#                    limitation (hardware addressing), users should not
#                    push the limit (use only the amount of memory required).
#
#   MemBanks - number of memory banks to be generated (each one provides
#              only one R/W access port from/to the user logic)
#              NOTE: in HLS-based cores, this equals the amount of I/O
#                    ports specified in the code
#
#   Regs     - number of Read/Write registers available in the kernel
#
#   RstPol   - reset polarity of user logic (not required for HLS-based kernels)
#                high
#                low  (default)
#

[A3Kernel@aes]
HwSource = hls
MemBytes = 640
MemBanks = 5
Regs = 0
RstPol = low

[A3Kernel@bulk]
HwSource = hls
MemBytes = 32768
MemBanks = 2
Regs = 0
RstPol = low

[A3Kernel@crs]
HwSource = hls
MemBytes = 33320
MemBanks = 5
Regs = 0
RstPol = low

[A3Kernel@kmp]
HwSource = hls
MemBytes = 65536
MemBanks = 2
Regs = 0
RstPol = low

[A3Kernel@knn]
HwSource = hls
MemBytes = 32768
MemBanks = 2
Regs = 0
RstPol = low

[A3Kernel@merge]
HwSource = hls
MemBytes = 8192
MemBanks = 1
Regs = 0
RstPol = low

[A3Kernel@nw]
HwSource = hls
MemBytes = 49152
MemBanks = 3
Regs = 0
RstPol = low

[A3Kernel@queue]
HwSource = hls
MemBytes = 32768
MemBanks = 2
Regs = 0
RstPol = low

[A3Kernel@stencil2d]
HwSource = hls
MemBytes = 49152
MemBanks = 3
Regs = 0
RstPol = low

[A3Kernel@stencil3d]
HwSource = hls
MemBytes = 49152
MemBanks = 3
Regs = 0
RstPol = low

[A3Kernel@strided]
HwSource = hls
MemBytes = 16384
MemBanks = 4
Regs = 0
RstPol = low
